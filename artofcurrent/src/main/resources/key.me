
标注 1：显示 IntelliJ IDEA 的插件分类，
    All plugins：显示 IntelliJ IDEA 支持的所有插件；
    Enabled：显示当前以前启用的插件；
    Disabled：显示当前未启用的插件；
    Bundled：显示 IntelliJ IDEA 所有自带的插件；
    Custom：显示我们自己安装的插件。

==========================================================================================================================
lombok  位置 refactor--> lombok ;
在自己的项目里添加lombok的maven的pom.xml依赖：

<dependency>
    <groupId>org.projectlombok</groupId>
    <artifactId>lombok</artifactId>
    <version>1.16.18</version>
    <scope>provided</scope>
</dependency>

只需要在相关类、变量上加上注解即可


既然lombok帮我们生成了getter和setter和构造方法等方法，但是在视图上并没有看到，那么怎么查看呢？
其实很简单：直接通过快捷键： Alt+7
或者  View》Tool Windows》Structure

常用的 lombok 注解：

@Data：注解在类上，将类提供的所有属性都添加get、set方法，并添加、equals、canEquals、hashCode、toString方法

@Setter：注解在类上，为所有属性添加set方法、注解在属性上为该属性提供set方法

@Getter：注解在类上，为所有的属性添加get方法、注解在属性上为该属性提供get方法

@NotNull：在参数中使用时，如果调用时传了null值，就会抛出空指针异常

@Synchronized 用于方法，可以锁定指定的对象，如果不指定，则默认创建一个对象锁定

@Log作用于类，创建一个log属性

@Builder：使用builder模式创建对象

@NoArgsConstructor：创建一个无参构造函数

@AllArgsConstructor：创建一个全参构造函数

@ToStirng：创建一个toString方法

@Accessors(chain = true)使用链式设置属性，set方法返回的是this对象。

@RequiredArgsConstructor：创建对象

@UtilityClass:工具类

@ExtensionMethod:设置父类

@FieldDefaults：设置属性的使用范围，如private、public等，也可以设置属性是否被final修饰。

@Cleanup: 关闭流、连接点。

@EqualsAndHashCode：重写equals和hashcode方法。

@toString：创建toString方法。
==========================================================================================================================
Properties to YAML Converter  Properties 转 YAML 格式插件
选中application.properties文件 右键：convert properties to YAML
====================================================================
Maven Helper  不使用

如果报红就去检查Maven Helper是否启动，重新启动程序！一直到第4步出现！Text可以添加依赖的xml;  Dependency Analyzer 可以使用Maven Helper，就是打开该pom文件的Dependency Analyzer视图（在文件打开之后，文件下面会多出这样一个tab），进入Dependency Analyzer视图之后有三个查看选项，分别是Conflicts(冲突)、All Dependencies as List(列表形式查看所有依赖)、All Dependencies as Tree(树结构查看所有依赖)。并且这个页面还支持搜索。很方便！并且使用该插件还能快速的执行maven命令

=========================
MetricsReloaded  代码复杂度  暂时没开启
---->Analyze -> Calculate Metri
  看下方出现：Mertics
  此插件是代码复杂度的查看

  安装。。。

  此插件安装以后会在下方出现一个action，其中会显示出代码的复杂度，如代码有多少行，多少注释信息等。第一次使用的话，你需要如下的操作。调用出Calculation，然后确定就可以了。

  Select the menu item Help | Find Action… and search for Calculate Metrics

===================================================================================================================
IDEA 代码生成插件 CodeMaker  没用
Java 开发过程中经常会遇到编写重复代码的事情，例如说：编写领域类和持久类的时候，大部分时候它们的变量名称，类型是一样的，在编写领域类的时候常常要重复写类似的代码。类似的问题太多……这里介绍一个 IDEA 的代码生成插件，通过 Velocity 支持自定义代码模板来生成代码。


使用
在 Java 类编辑界面右键“Generate”，选择对应模板即可自动生成代码到当前类的包，大部分情况下生成的代码已经解决了百分之八十的问题，只需稍作修改，移动到合适的包中，就能快速完成代码编写。

================================
IDEA自动生成固定代码片段
1. 选中要生成的代码，
2. 从菜单中选择Tools | Save as Live Template，
3. 填写触发单词（Abbreviation），
4. 在代码中输入触发单词后按Tab，可以重复生成代码片段。

============================================
activate-power-mode






















